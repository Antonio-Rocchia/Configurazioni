- name: Include OS-specific variables for Fedora
  include_vars: 'fedora.yml' 
  when: ansible_distribution == 'Fedora'

- include_tasks: fedora.yml
  when: ansible_distribution == 'Fedora'

- name: Download latest release information on cli utilities from github
  ansible.builtin.uri:
    url: 'https://api.github.com/repos/{{ item.user }}/{{ item.repo }}/releases/latest'
    method: GET
    return_content: true
  loop: '{{ linux_cli_tools_from_github_releases }}'
  register: linux_cli_tools_github_latest
  no_log: true
  tags: devel

- name: Find url of latest release from github api response
  ansible.builtin.set_fact:
    matching_asset: >-
          {{ item.json.assets | selectattr('name', 'search', item.item.asset_substring) | map(attribute='browser_download_url') | first }}
    matching_item: '{{ item.item }}'
  loop: '{{ linux_cli_tools_github_latest.results }}'
  when: item.json.assets | selectattr('name', 'search', item.item.asset_substring) | list | length > 0
  register: matching_assets
  no_log: true
  tags: devel

- name: Ensure ~/.local/bin/ exists
  ansible.builtin.file:
    path: '{{ local_bin_path }}'
    state: directory
    mode: '0755'
  tags: devel

- name: Debug 1
  debug:
    msg: '{{ matching_assets.results | map(attribute="ansible_facts") | list }}'
    msg: '{{ local_bin_path }}'
  tags: devel

- name: Download and extract executables from tar.gz files directly to ~/.local/bin
  ansible.builtin.unarchive:
    src: '{{ item.matching_asset }}'
    dest: '{{ local_bin_path }}'
    remote_src: true
    include: '{{ item.matching_item.executable }}'
    creates: '{{ item.matching_item.executable }}'
  loop: '{{ matching_assets.results | map(attribute="ansible_facts") | list }}'
  tags: devel

- name: Ensure executables have the correct permissions
  ansible.builtin.file:
    path: '{{ local_bin_path }}/{{ item.executable }}'
    mode: '0755'
  loop: '{{ linux_cli_tools_from_github_releases }}'
  tags: devel
